#include <stdio.h>
#include <stdlib.h>

#define MAX_PROCESSES 5
#define MAX_RESOURCES 3

// Structure to store the process information
struct process {
  int allocation[MAX_RESOURCES];
  int max[MAX_RESOURCES];
  int need[MAX_RESOURCES];
};

int main() {
  int available[MAX_RESOURCES] = {3, 2, 1};
  struct process processes[MAX_PROCESSES] = {
    {{1, 1, 2}, {5, 4, 4}, {}},
    {{2, 1, 2}, {4, 3, 3}, {}},
    {{3, 0, 1}, {9, 1, 3}, {}},
    {{0, 2, 0}, {8, 6, 4}, {}},
    {{1, 1, 2}, {2, 2, 3}, {}}
  };

  // Calculate the need matrix
  for (int i = 0; i < MAX_PROCESSES; i++) {
    for (int j = 0; j < MAX_RESOURCES; j++) {
      processes[i].need[j] = processes[i].max[j] - processes[i].allocation[j];
    }
  }

  // Print the need matrix
  printf("Need Matrix:\n");
  for (int i = 0; i < MAX_PROCESSES; i++) {
    printf("P%d\t", i);
    for (int j = 0; j < MAX_RESOURCES; j++) {
      printf("%d\t", processes[i].need[j]);
    }
    printf("\n");
  }

  return 0;
}
